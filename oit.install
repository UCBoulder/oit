<?php

/**
 * @file
 * Install, update and uninstall functions for the sympa_initialize module.
 */

use Drupal\Component\Utility\Random;
use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\node\Entity\Node;
use Drupal\user\Entity\User;

/**
 * Helper function to update node body text.
 */
function update_node_body($nid, $body, $format) {
  $query = \Drupal::entityQuery('node')
    ->condition('nid', $nid)
    ->accessCheck(FALSE);

  $nids = $query->execute();
  foreach ($nids as $nid) {
    $node = Node::load($nid);
    $node->set('body', [
      'format' => $format,
      'value' => $body,
    ]);
    $node->save();
  }
}

/**
 * Add missing manage_webform users.
 */
function oit_update_9000() {
  $usernames = [
    'jonesdr',
    'fast',
    'gewe8216',
    'tiha2368',
    'joca3391',
    'sode2485',
    'aled9463',
    'prte0550',
    'evansc',
    'houston',
    'thba2172',
    'kero7268',
    'alla1028',
    'laba7221',
    'sisa6831',
    'amwi5704',
  ];
  foreach ($usernames as $username) {
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $user = User::create();
    $random = new Random();

    // Mandatory.
    $user->setPassword($random->string());
    $user->enforceIsNew();
    $user->setEmail($random->string());
    $user->setUsername($username);

    // Optional.
    $user->set('langcode', $language);
    $user->set('preferred_langcode', $language);
    $user->set('preferred_admin_langcode', $language);
    $user->addRole('manage_webforms');
    $user->activate();

    // Save user account.
    $user->save();
  }
}

/**
 * Truncate cache_container table to remove zap modules.
 */
function oit_update_9001() {
  \Drupal::database()->truncate('cache_container')->execute();
}

/**
 * Set menu items for phising nodes.
 */
function oit_update_9002() {
  $term_id = 849;
  $query = \Drupal::database()->select('taxonomy_index', 'ti');
  $query->fields('ti', ['nid']);
  $query->condition('ti.tid', $term_id);
  $nodes = $query->execute()->fetchAll();

  foreach ($nodes as $nid) {
    $nid = $nid->nid;
    $menu = MenuLinkContent::create([
      'title' => 'Phishing Email-' . $nid,
      'link' => ['uri' => 'entity:node/' . $nid],
      'menu_name' => 'main',
      'parent' => 'views_view:views.phishing.page_1',
      'weight' => 0,
    ]);
    $menu->setUnpublished(TRUE);
    $menu->save();
  }
}

/**
 * Disable/enable servicenow to enable new schema/class.
 */
function oit_update_9003() {
  $module = ['servicenow'];
  \Drupal::service('module_installer')->uninstall($module, TRUE);
  \Drupal::service('module_installer')->install($module, TRUE);
}

/**
 * Clear out field_exclude_from_search field.
 */
function oit_update_9004() {
  \Drupal::database()->truncate('node__field_exclude_from_search')->execute();
  \Drupal::database()->truncate('node_revision__field_exclude_from_search')->execute();
}

/**
 * Trashing markdown.
 */
function oit_update_9005() {
  \Drupal::configFactory()->getEditable('filter.format.markdown')->delete();
  $module = ['markdown'];
  \Drupal::service('module_installer')->uninstall($module, TRUE);
  \Drupal::configFactory()->getEditable('markdown.settings')->delete();
}

/**
 * Implements hook_update().
 */
function oit_update_9006() {
  $config = \Drupal::configFactory()->getEditable('oit.settings');
  $config->set('show_login_form', TRUE)->save();
}

/**
 * Death to phishing nodes.
 */
function oit_update_9007() {
  $phish_cut_off = strtotime("today");
  $dotn = \Drupal::service('oit.dotn');
  $dotn->update(849, $phish_cut_off);
  // Delete taxonomy term 849, page type of phishing.
  $controller = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  $entities = $controller->loadMultiple([849]);
  $controller->delete($entities);
}

/**
 * Remove oitbik config.
 */
function oit_update_9008() {
  $connection = \Drupal::database();
  $connection->delete('config')
    ->condition('name', 'oitbik.settings')
    ->execute();
}

/**
 * Update Services page.
 */
function oit_update_10002() {
  $nid = 329;
  $format = 'rich_text';
  $body = <<<EOT
  <div class="no-list-style">
    <ul class="flex flex-start">
        <li>
            <a class="button-internal button-internal--active" href="/services">Services by Category</a>
        </li>
        <li>
            <a class="button-internal" href="/services/search">Filter Services</a>
        </li>
        <li>
            <a class="button-internal" href="/tutorial/search">Filter Tutorials</a>
        </li>
    </ul>
    <p>
        [block id="86"][/block]
    </p>
</div>
EOT;
  update_node_body($nid, $body, $format);
}

/**
 * Clean out old menus.
 */
function oit_update_10003() {
  $menu_items = [
    // md-about-oit.
    25353,
    25361,
    // md-about-oit-tp.
    25371,
    25399,
    // md-accounts-related-service.
    25355,
    25373,
    25375,
    // md-accounts-top-pages.
    25389,
    25391,
    25393,
    25397,
    // md-services-suggested.
    25309,
    25311,
    25345,
    25347,
    25385,
    // md-services-viewby.
    25313,
    // md-shware-software.
    25295,
    25297,
    25299,
    25305,
    25307,
    // md-shware-top-downloads.
    25301,
    25303,
    25319,
    // md-shware-top-pages.
    25333,
    25335,
    25339,
    25341,
    // md-top-support-training.
    25323,
    // oit-footer-avc.
    26635,
    26637,
    26639,
    26641,
    // oit-footer-resources.
    26629,
    28919,
    30899,
    36341,
    // Navigation.
    11,
    29563,
    36956,
    // tab-security-resources.
    25423,
    25429,
    // tab-technology-tools.
    25407,
    25409,
    25411,
    25413,
    25415,
    25417,
    25669,
  ];
  // Delete menu items.
  foreach ($menu_items as $menu_item) {
    $menu_link = \Drupal::entityTypeManager()->getStorage('menu_link_content')->load($menu_item);
    $menu_link->delete();
  }
}

/**
 * Update all nodes field_domain_access to oit_colorado_edu.
 */
function oit_update_10004() {
  \Drupal::state()->set('domain_update', 0);
}

